openapi: 3.0.3
info:
  title: Product Api V1
  description: Products related services.
  version: 1.0.0

tags:
  - name: products
paths:
  /v1/products/search:
    summary: Products
    description: Products
    post:
      tags:
        - products
      summary: search products
      description: search products
      operationId: searchProducts
      requestBody:
        description: Search properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductRequest'
            examples:
              example:
                value:
                  portalName: foo
                  itemName: name
                  itemType: pageLink
      responses:
        '202':
          description: Create export package request was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductResponse'
              examples:
                example:
                  value:
                    packageUuid: 00000000-0000-0000-a000-000000000001
                    status: CREATING
        '400':
          description: |
            The server cannot or will not process the request due to something that is perceived to be a client error
            (e.g. the request does not meet the API Specification or contains validation errors).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductResponse'
              examples:
                example:
                  value:
                    status: FAILED
                    message: 'Invalid package: portal name, item name and type are mandatory'
        '401':
          description: Request lacks valid authentication credentials for the target resource
        '403':
          description: Request has insufficient authentication credentials to grant access for the target resource.
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.

components:
  schemas:
    SearchProductRequest:
      properties:
        isAllConditionsMatched:
          title: All Conditions Matched
          description: To make sure all the properties are satisfying.
          type: boolean
    SearchProductResponse:
      properties:
        nextPage:
          title: Next Page cursor
          description: For fetching next batch of products
          type: string

